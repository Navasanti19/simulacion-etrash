--- /usr/local/lib/python3.6/dist-packages/torchvision/models/resnet.py
+++ /usr/local/lib/python3.6/dist-packages/torchvision/models/resnet.py
@@ -1,17 +1,8 @@
 class BasicBlock(nn.Module):
-    expansion: int = 1
+    expansion = 1
 
-    def __init__(
-        self,
-        inplanes: int,
-        planes: int,
-        stride: int = 1,
-        downsample: Optional[nn.Module] = None,
-        groups: int = 1,
-        base_width: int = 64,
-        dilation: int = 1,
-        norm_layer: Optional[Callable[..., nn.Module]] = None
-    ) -> None:
+    def __init__(self, inplanes, planes, stride=1, downsample=None, groups=1,
+                 base_width=64, dilation=1, norm_layer=None):
         super(BasicBlock, self).__init__()
         if norm_layer is None:
             norm_layer = nn.BatchNorm2d
@@ -28,7 +19,7 @@
         self.downsample = downsample
         self.stride = stride
 
-    def forward(self, x: Tensor) -> Tensor:
+    def forward(self, x):
         identity = x
 
         out = self.conv1(x)